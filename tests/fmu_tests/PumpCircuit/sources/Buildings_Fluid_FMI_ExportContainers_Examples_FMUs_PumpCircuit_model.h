/* Simulation code for Buildings.Fluid.FMI.ExportContainers.Examples.FMUs.PumpCircuit generated by the OpenModelica Compiler OpenModelica 1.21.0~dev-298-g51286f2. */
#if !defined(Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit__MODEL_H)
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit__MODEL_H

#include "openmodelica.h"
#include "openmodelica_func.h"
#include "simulation_data.h"
#include "simulation/simulation_info_json.h"
#include "simulation/simulation_runtime.h"
#include "util/omc_error.h"
#include "util/parallel_helper.h"
#include "util/jacobian_util.h"
#include "simulation/simulation_omc_assert.h"
#include "simulation/solver/model_help.h"
#include "simulation/solver/delay.h"
#include "simulation/solver/linearSystem.h"
#include "simulation/solver/nonlinearSystem.h"
#include "simulation/solver/mixedSystem.h"
#include "simulation/solver/spatialDistribution.h"

#if defined(__cplusplus)
extern "C" {
#endif

#include <string.h>

#include "Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functions.h"

#define _omcQ_24DER_24Buildings_24PFluid_24PBaseClasses_24PFlowModels_24PbasicFlowFunction_5F_5Fm_5F_5Fflow_index 0
#define Buildings_Fluid_BaseClasses_FlowModels_basicFlowFunction__m__flow_index 1
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_bou_Medium_ThermodynamicState_index 2
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_bou_Medium_setState__pTX_index 3
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_bou_Medium_specificEnthalpy_index 4
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_Medium_ThermodynamicState_index 5
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_eff_getArrayAsString_index 6
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_preSou_Medium_ThermodynamicState_index 7
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_preSou_Medium_density_index 8
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_preSou_Medium_setState__phX_index 9
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_vol_Medium_ThermodynamicState_index 10
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_vol_Medium_specificEnthalpy__pTX_index 11
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_vol_Medium_temperature__phX_index 12
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_fan_vol_steBal_Medium_ThermodynamicState_index 13
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hea_outCon_Medium_ThermodynamicState_index 14
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hea_outCon_Medium_setState__pTX_index 15
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hea_outCon_Medium_specificEnthalpy_index 16
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hea_preDro_Medium_ThermodynamicState_index 17
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hea_preDro_Medium_dynamicViscosity_index 18
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hvacAda_bou_Medium_ThermodynamicState_index 19
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hvacAda_bou_Medium_setState__pTX_index 20
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hvacAda_bou_Medium_specificEnthalpy_index 21
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_hvacAda_con_Medium_temperature__phX_index 22
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_resSup_Medium_ThermodynamicState_index 23
#define Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_resSup_Medium_dynamicViscosity_index 24
#define Buildings_Fluid_Movers_BaseClasses_Characteristics_flowParametersInternal_index 25
#define Buildings_Fluid_Movers_BaseClasses_Euler_correlation_index 26
#define Buildings_Fluid_Movers_BaseClasses_Euler_efficiency_index 27
#define Buildings_Fluid_Movers_BaseClasses_Euler_peak_index 28
#define Buildings_Fluid_Movers_BaseClasses_Euler_power_index 29
#define Buildings_Fluid_Movers_BaseClasses_Euler_powerWithDerivative_index 30
#define Buildings_Utilities_Math_Functions_cubicHermiteLinearExtrapolation_index 31
#define Buildings_Utilities_Math_Functions_isMonotonic_index 32
#define Buildings_Utilities_Math_Functions_regStep_index 33
#define Buildings_Utilities_Math_Functions_smoothInterpolation_index 34
#define Buildings_Utilities_Math_Functions_smoothMax_index 35
#define Buildings_Utilities_Math_Functions_splineDerivatives_index 36
#define Buildings_Utilities_Math_Functions_BaseClasses_smoothTransition_index 37
#define Modelica_Fluid_Utilities_checkBoundary_index 38
#define Modelica_Fluid_Utilities_cubicHermite_index 39
#define Modelica_Fluid_Utilities_regStep_index 40
#define Modelica_Utilities_Streams_error_index 41

extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_callExternalObjectDestructors(DATA *_data, threadData_t *threadData);
#if !defined(OMC_NUM_NONLINEAR_SYSTEMS) || OMC_NUM_NONLINEAR_SYSTEMS>0
#endif
#if !defined(OMC_NUM_LINEAR_SYSTEMS) || OMC_NUM_LINEAR_SYSTEMS>0
#endif
#if !defined(OMC_NUM_MIXED_SYSTEMS) || OMC_NUM_MIXED_SYSTEMS>0
#endif
#if !defined(OMC_NO_STATESELECTION)
extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initializeStateSets(int nStateSets, STATE_SET_DATA* statesetData, DATA *data);
#endif
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionAlgebraics(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_storeDelayed(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_storeSpatialDistribution(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_initSpatialDistribution(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_updateBoundVariableAttributes(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionInitialEquations(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionInitialEquations_lambda0(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionRemovedInitialEquations(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_updateBoundParameters(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_checkForAsserts(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_ZeroCrossingsEquations(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_ZeroCrossings(DATA *data, threadData_t *threadData, double* gout);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_updateRelations(DATA *data, threadData_t *threadData, int evalZeroCross);
extern const char* Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_zeroCrossingDescription(int i, int **out_EquationIndexes);
extern const char* Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_relationDescription(int i);
extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_initSample(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianG(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianA(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianB(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianC(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianD(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianF(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initialAnalyticJacobianH(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *jacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacG_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacA_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacB_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacC_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacD_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacF_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionJacH_column(DATA* data, threadData_t *threadData, ANALYTIC_JACOBIAN *thisJacobian, ANALYTIC_JACOBIAN *parentJacobian);
extern const char* Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_linear_model_frame(void);
extern const char* Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_linear_model_datarecovery_frame(void);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_mayer(DATA* data, modelica_real** res, short *);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_lagrange(DATA* data, modelica_real** res, short *, short *);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_pickUpBoundsForInputsInOptimization(DATA* data, modelica_real* min, modelica_real* max, modelica_real*nominal, modelica_boolean *useNominal, char ** name, modelica_real * start, modelica_real * startTimeOpt);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_setInputData(DATA *data, const modelica_boolean file);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_getTimeGrid(DATA *data, modelica_integer * nsi, modelica_real**t);
extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_initSynchronous(DATA * data, threadData_t *threadData);
extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_updateSynchronous(DATA * data, threadData_t *threadData, long base_idx);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_equationsSynchronous(DATA * data, threadData_t *threadData, long base_idx, long sub_idx);
extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_read_input_fmu(MODEL_DATA* modelData, SIMULATION_INFO* simulationData);
extern void Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_function_savePreSynchronous(DATA *data, threadData_t *threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_inputNames(DATA* data, char ** names);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_dataReconciliationInputNames(DATA* data, char ** names);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_dataReconciliationUnmeasuredVariables(DATA* data, char ** names);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_initializeDAEmodeData(DATA *data, DAEMODE_DATA*);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_functionLocalKnownVars(DATA* data, threadData_t* threadData);
extern int Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_symbolicInlineSystem(DATA* data, threadData_t* threadData);

#include "Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit_literals.h"




#if defined(HPCOM) && !defined(_OPENMP)
  #error "HPCOM requires OpenMP or the results are wrong"
#endif
#if defined(_OPENMP)
  #include <omp.h>
#else
  /* dummy omp defines */
  #define omp_get_max_threads() 1
#endif

#if defined(__cplusplus)
}
#endif

#endif /* !defined(Buildings_Fluid_FMI_ExportContainers_Examples_FMUs_PumpCircuit__MODEL_H) */


