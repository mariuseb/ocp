{
    "model": {
        "ode": {
            "Ti": "(Te - Ti)/(Rie*Ci) + _y*UA_is*(Tsup - Ti)/Ci + Ai*(phi_s/Ci)",
            "Te": "(Ti - Te)/(Rie*Ce) + (Ta - Te)/(Rea*Ce)",
            "E": "pi_ode(E, ca.vertcat(Ti, Tset))"
        },
        "alg": {
            "_y": "_y + pi_y(E, ca.vertcat(Ti, Tset))", 
            "Tsup": "Tsup - (_y*(313.15 - 294.15) + 294.15)",
            "Ph": "Tsup*_y"
        },
        "p": [
            "Rie",
            "Rea",
            "Ci",
            "Ce",
            "Ai",
            "UA_is"
        ],
        "u": [
            "Tset"
        ],
        "z": [
            "_y",
            "Tsup",
            "Ph"
        ],
        "r": [
            "Ta",
            "phi_s",
            "Ti_ub",
            "Ti_lb"
        ],
        "x": [
            "Ti",
            "Te",
            "E"
        ]
    },
    "bounds": {
        "u": {
            "lbu": [288.15],
            "ubu": [296.15]
        },
        "z": {
            "lbz": [0,288.15,0],
            "ubz": [1,313.15,15000]
        }
    },
    "objective": "dot(Ph, Ph) + 1E8*dot(sl, sl)",
    "N": 6,
    "dt": 900,
    "method": "collocation",
    "integrator": 
        {
        "name": "IRK",
        "method": "radau",
        "degree": 3,
        "n_steps": 1
        }
    ,
    "solver": "none",
    "opt": {
        "verbose": false,
        "ipopt.linear_solver": "ma57",
        "ipopt.ma57_pre_alloc": 3,
        "ipopt.ma57_automatic_scaling": "yes",
        "ipopt.max_cpu_time": 100,
        "ipopt.hessian_approximation": "exact"
    },
    "codegen": false
}