{
    "model": {
        "ode": {
            "Tret": "((Tset_ret - Tret)/(Rret*Cret))*rise + ((Tset_ret - Tret)/(Rret_hold*Cret_hold))*(1-rise)",
            "Tsup": "((Tset_sup - Tsup)/(Rsup*Csup))*rise + ((Tset_sup - Tsup)/(Rsup_hold*Csup_hold))*(1-rise)"
        },
        "alg": {
            "Tset_ret": "Tset_ret - (T_set_ret_b - T_set_ret_a*(Ta - Ta_dim))*m_flow_bool - Ti*(1 - m_flow_bool)",
            "Tset_sup": "Tset_sup - (T_set_sup_b - T_set_sup_a*(Ta - Ta_dim))*m_flow_bool - Ti*(1 - m_flow_bool)",
            "Prad": "Prad - m_flow*cp_water*(Tsup - Tret)"
        },
        "w": {
            "v1": "m_flow_weight*(Tret - y1)",
            "v2": "m_flow_weight*(Tsup - y2)",
            "v3": "Prad - y3"
        },
        "p": [
            "Ta_dim",
            "T_set_sup_b",
            "T_set_sup_a",
            "Ta_max",
            "Rsup",
            "Csup",
            "Rsup_hold",
            "Csup_hold",
            "T_set_ret_b",
            "T_set_ret_a",
            "Rret",
            "Cret",
            "Rret_hold",
            "Cret_hold",
            "cp_water"
        ],
        "u": [
            "u_val",
            "Ta",
            "Ti",
            "m_flow_bool",
            "m_flow_weight",
            "delta_m_flow",
            "rise",
            "m_flow"
        ],
        "z": [
            "Tset_ret",
            "Tset_sup",
            "Prad"
        ],
        "x": [
          "Tret",
          "Tsup"
        ],
        "y": [
            ["y1", "Tret"],
            ["y2", "Tsup"],
            ["y3", "Prad"]
        ]
    },
    "bounds": {
        "z": {
            "lbz": [280,280,-1000],
            "ubz": [400,400,3000]
        }
    },
    "objective": "dot(v1, v1)@R[0,0] + dot(v2, v2)@R[1,1] + dot(v3, v3)@R[2,2]",
    "method": "multiple_shooting",
    "integrator": 
        {
        "name": "IRK",
        "method": "legendre",
        "degree": 3,
        "n_steps": 1
        }
    ,
    "solver": "",
    "opt": {
        "verbose": false,
        "ipopt.linear_solver": "ma57",
        "ipopt.ma57_pre_alloc": 10,
        "ipopt.ma57_automatic_scaling" : "yes",
        "ipopt.hessian_approximation": "exact"
    },
    "codegen": true
}