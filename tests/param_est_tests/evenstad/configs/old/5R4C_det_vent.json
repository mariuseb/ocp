{
    "model": {
        "ode": {
            "Ti": "(Te - Ti)/(Rie*Ci) + alpha_rad*(1/Ci)*phi_h + Ai*(phi_s/Ci) + alpha_sup*(1/Ci)*m_in*cp_air*(Tsup_air - Ti) + alpha_ret*(1/Ci)*m_out*cp_air*(Ti - Tret_air) + (Ti1 - Ti)/(Ree*Ci)",
            "Te": "(Ti - Te)/(Rie*Ce) + (Ta - Te)/(Rea*Ce)",
            "Ti1": "(Te1 - Ti1)/(Rie1*Ci1) + alpha_rad1*(1/Ci1)*phi_h + Ai1*(phi_s/Ci1) + alpha_sup1*(1/Ci1)*m_in*cp_air*(Tsup_air - Ti1) + alpha_ret1*(1/Ci1)*m_out*cp_air*(Ti1 - Tret_air) + (Ti - Ti1)/(Ree*Ci1)",
            "Te1": "(Ti1 - Te1)/(Rie1*Ce1) + (Ta - Te1)/(Rea1*Ce1)"
        },
        "alg": {
            "alpha": "alpha_rad + alpha_rad1 - 1"
        },
        "w": {
            "v1": "Ti - y1",
            "v2": "Ti1 - y2"
        },
        "p": [
            "Rie",
            "Rea",
            "Ci",
            "Ce",
            "Ai",
            "Rie1",
            "Rea1",
            "Ci1",
            "Ce1",
            "Ai1",
            "Ree",
            "alpha_rad",
            "alpha_rad1",
            "alpha_sup",
            "alpha_sup1",
            "alpha_ret",
            "alpha_ret1",
            "cp_air"
        ],
        "u": [
            "phi_h",
            "phi_s",
            "Ta",
            "m_in",
            "m_out",
            "Tsup_air",
            "Tret_air"
        ],
        "x": [
            "Ti",
            "Te",
            "Ti1",
            "Te1"
        ],
        "z": [
            "alpha"
        ],
        "y": [
            ["y1", "Ti"],
            ["y2", "Ti1"]
        ]
    },
    "objective": "dot(v1, v1)@R[0,0] + dot(v2, v2)@R[1,1]",
    "method": "multiple_shooting",
    "integrator": 
        {
        "name": "IRK",
        "method": "legendre",
        "degree": 3,
        "n_steps": 1
        }
    ,
    "solver": "",
    "opt": {
        "verbose": false,
        "ipopt.linear_solver": "ma57",
        "ipopt.ma57_pre_alloc": 10,
        "ipopt.ma57_automatic_scaling" : "yes"
    },
    "codegen": true
}