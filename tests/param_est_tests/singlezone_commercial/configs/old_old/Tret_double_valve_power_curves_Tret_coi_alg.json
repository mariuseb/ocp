{
    "model": {
        "ode": {
            "Tret": "(Tret_set - Tret)/tau"
        },
        "alg": {
            "rad_flo": "rad_flo - rad_flo_nom*regNonZeroPower(rad_val, n1, 1E-6)",
            "coi_flo": "coi_flo - coi_flo_nom*regNonZeroPower(coi_val, n2, 1E-6)",
            "tot_flo": "tot_flo - (rad_flo + coi_flo)",
            "coi_flo_nom": "coi_flo_nom - (coi_flo_nom_b + coi_flo_nom_a*(1 - rad_val))",
            "Tret_set": "Tret_set - (Tret_b + Tret_a*rad_val)",
            "Tret_coi": "Tret_coi - (Tret_coi_b + Tret_coi_a*(coi_val + coi_val_b))"
        },
        "w": {
            "v6": "y6 - rad_flo",
            "v7": "y7 - coi_flo",
            "v8": "y8 - tot_flo",
            "v9": "y9 - Tret",
            "v10": "y10 - Tret_coi"
        },
        "p": [
            "n1",
            "n2",
            "tau",
            "tau_air",
            "rad_flo_nom",
            "coi_flo_nom_b",
            "coi_flo_nom_a",
            "coi_val_b",
            "Tret_coi_b",
            "Tret_coi_a",
            "Tret_b",
            "Tret_a"
        ],
        "r": [
            "Ta",
            "phi_s",
            "int_con",
            "int_lat",
            "int_rad"
        ],
        "u": [
            "rad_val",
            "coi_val",
            "rad_val_weight",
            "coi_val_weight"
        ],
        "z": [
          "rad_flo",
          "coi_flo",
          "tot_flo",
          "coi_flo_nom",
          "Tret_set",
          "Tret_coi"
        ],
        "x": [
            "Tret"
        ],
        "y": [
            ["y6", "rad_flo"],
            ["y7", "coi_flo"],
            ["y8", "tot_flo"],
            ["y9", "Tret"],
            ["y10", "Tret_coi"]
        ]
    },
    "bounds": {
        "x": {
            "lbx": [280],
            "ubx": [340]
        },
        "z": {
            "lbz": [0,0,0,0,280,280],
            "ubz": [10,10,10,10,340,340]
        }
    },
    "objective": "dot(v6, v6)@R[0,0] + dot(v7, v7)@R[1,1] + dot(v8, v8)@R[2,2] + dot(rad_val_weight*v9, rad_val_weight*v9)@R[3,3] + dot(coi_val_weight*v10, coi_val_weight*v10)@R[4,4]",
    "method": "multiple_shooting",
    "integrator": 
        {
        "name": "IRK",
        "method": "legendre",
        "degree": 3,
        "n_steps": 1
        }
    ,
    "solver": "",
    "opt": {
        "verbose": false,
        "ipopt.linear_solver": "ma57",
        "ipopt.ma57_pre_alloc": 10,
        "ipopt.ma57_automatic_scaling" : "yes"
    },
    "codegen": false
}
