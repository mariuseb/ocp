{
    "model": {
        "ode": {
            "Ti": "(Te - Ti)/(Rie*Ci) + (Ta - Ti)/(Ria*Ci) + Ai*(phi_s/Ci) + rho_int*((int_con+int_lat+int_rad)/Ci) + (1/Ci)*UA_vent_air*(Tsup_air - Ti)*ahu_pump_sup + (1/Ci)*Prad",
            "Te": "(Ti - Te)/(Rie*Ce) + (Ta - Te)/(Rea*Ce)",
            "Tret": "(Tret_set - Tret)/tau",
            "Tsup_air": "UA_sup_nom*regNonZeroPower(ahu_pump_sup, n3, 1E-6)*(ahu_reaTHeaRec - Tsup_air)/(Csup_nom) + (1/Csup_nom)*UA_vent_air*ahu_pump_sup*(Ti - Tsup_air)  + (1/Csup_nom)*Pvent"
        },
        "alg": {
            "Pvent": "Pvent - coi_flo*eta_hex_ahu*cp_water*(dh_Tsup - Tret_coi)",
            "Prad": "Prad - rad_flo*cp_water*eta_hex_rad*(dh_Tsup - Tret)",
            "rad_flo": "rad_flo - rad_flo_nom*regNonZeroPower(rad_val, n1, 1E-6)",
            "coi_flo": "coi_flo - coi_flo_nom*regNonZeroPower(coi_val, n2, 1E-6)",
            "coi_flo_nom": "coi_flo_nom - (coi_flo_nom_b + coi_flo_nom_a*(1 - rad_val))",
            "tot_flo": "tot_flo - (rad_flo + coi_flo)",
            "Tret_coi": "Tret_coi - (ahu_reaTHeaRec + Tret_coi_b)",
            "Tret_set": "Tret_set - (Tret_b + Tret_a*rad_flo)",
            "ahu_reaTRetAir": "ahu_reaTRetAir - Ti",
            "ahu_reaTHeaRec": "(Ta + (ahu_reaTRetAir - Ta)*eta_hex2)*ahu_pump_sup_on + (1-ahu_pump_sup_on)*Trec_off - ahu_reaTHeaRec",
            "ahu_reaFloSupAir": "ahu_reaFloSupAir - m_flow_air_nom*regNonZeroPower(ahu_pump_sup, n, 1e-6)",
            "ahu_pump_sup_on": "ahu_pump_sup_on - (1/(1 + ca.exp(-(ahu_pump_sup - ahu_pump_sup_thres)/k)))",
            "Pfan": "Pfan - a*ahu_pump_sup**3 - b*ahu_pump_sup**2 - c*ahu_pump_sup - d"
        },
        "w": {
            "v1": "y1 - Prad",
            "v2": "y2 - Pvent",
            "v3": "y3 - ahu_reaTHeaRec",
            "v4": "y4 - ahu_reaTRetAir",
            "v5": "y5 - ahu_reaFloSupAir",
            "v6": "y6 - rad_flo",
            "v7": "y7 - coi_flo",
            "v8": "y8 - tot_flo",
            "v9": "y9 - Tret",
            "v10": "y10 - Tret_coi",
            "v11": "y11 - Tsup_air",
            "v12": "y12 - Ti",
            "v13": "y13 - Pfan"
        },
        "p": [
            "UA_sup_nom",
            "cp_water",
            "eta_hex_ahu",
            "eta_hex_rad",
            "m_flow_air_nom",
            "cp_air",
            "eta_hex1",
            "eta_hex2",
            "Trec_off",
            "k",
            "ahu_pump_sup_thres",
            "Csup_nom",
            "Rsupi",
            "n",
            "n1",
            "n2",
            "n3",
            "n4",
            "Tret_b",
            "Tret_a",
            "tau",
            "rad_flo_nom",
            "coi_flo_nom_b",
            "coi_flo_nom_a",
            "Tret_coi_b",
            "dh_Tsup",
            "Rie",
            "Rea",
            "Ria",
            "UA_vent_air",
            "rho_int",
            "Ci",
            "Ce",
            "Ai",
            "a",
            "b",
            "c",
            "d"
        ],
        "u": [
            "Tsup",
            "rad_val",
            "coi_val",
            "ahu_pump_sup",
            "oveTSupSet"  
        ],
        "r": [
            "Ta",
            "phi_s",
            "int_con",
            "int_lat",
            "int_rad"
        ],
        "x": [
            "Ti",
            "Te",
            "Tret",
            "Tsup_air"
        ],
        "z": [
          "Prad",
          "Pvent",
          "rad_flo",
          "coi_flo",
          "coi_flo_nom",
          "tot_flo",
          "Tret_coi",
          "Tret_set",
          "ahu_reaTRetAir",
          "ahu_reaTHeaRec",
          "ahu_reaFloSupAir",
          "ahu_pump_sup_on",
          "Pfan"
        ],
        "y": [
            ["y1", "Prad"],
            ["y2", "Pvent"],
            ["y3", "ahu_reaTHeaRec"],
            ["y4", "ahu_reaTRetAir"],
            ["y5", "ahu_reaFloSupAir"],
            ["y6", "rad_flo"],
            ["y7", "coi_flo"],
            ["y8", "tot_flo"],
            ["y9", "Tret"],
            ["y10", "Tret_coi"],
            ["y11", "Tsup_air"],
            ["y12", "Ti"],
            ["y13", "Pfan"]
        ]
    },
    "bounds": {
        "z": {
            "lbz": [0,0,0,0,0,0,280,280,280,280,0,0,0],
            "ubz": [1E7,1E7,10,10,10,10,340,340,340,340,40,1,1E6]
        },
        "x": {
            "lbx": [280,280,280,280],
            "ubx": [340,340,340,340]
        }
    },
    "objective": "dot(v1, v1)@R[0,0] + dot(v2, v2)@R[1,1] + dot(ahu_pump_sup_on*v3, ahu_pump_sup_on*v3)@R[2,2] + dot(v4, v4)@R[3,3] + dot(v5, v5)@R[4,4] + dot(v6, v6)@R[5,5] + dot(v7, v7)@R[6,6] + dot(v8, v8)@R[7,7] + dot(ahu_pump_sup_on*v9, ahu_pump_sup_on*v9)@R[8,8] + dot(ahu_pump_sup_on*v10, ahu_pump_sup_on*v10)@R[9,9] + dot(ahu_pump_sup_on*v11, ahu_pump_sup_on*v11)@R[10,10] + dot(v12, v12)@R[11,11] + dot(v13, v13)@R[12,12]",
    "method": "multiple_shooting",
    "integrator": 
        {
        "name": "IRK",
        "method": "radau",
        "degree": 3,
        "n_steps": 1
        }
    ,
    "solver": "none",
    "opt": {
        "verbose": false,
        "ipopt.linear_solver": "ma57",
        "ipopt.ma57_pre_alloc": 10,
        "ipopt.ma57_automatic_scaling" : "yes"
    },
    "codegen": false
}
