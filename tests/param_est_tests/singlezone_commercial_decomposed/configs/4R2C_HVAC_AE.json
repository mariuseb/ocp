{
    "model": {
        "alg": {
            "Tsup_model": "pump_on*(Tsup_b + Tsup_a*dh_pump - Tsup_model)",
            "Tret_model": "pump_on*(Tret_b + Tret_a*dh_pump - Tret_model)"
        },
        "w": {
            "v1": "rad_val*dh_pump*m_flow_water_nom*cp_water*(Tsup_model - Tret_model) - y1*eta",
            "v2": "dh_pump*m_flow_water_nom - y2",
            "v3": "pump_on*(Tsup_model - y3)",
            "v4": "pump_on*(Tret_model - y4)"
        },
        "p": [
            "Tsup_a",
            "Tsup_b",
            "Tret_a",
            "Tret_b",
            "m_flow_water_nom",
            "cp_water",
            "n",
            "UA_nom",
            "eta"
        ],
        "u": [
            "dh_pump",
            "rad_val",
            "Prad",
            "rad_flo",
            "Tsup",
            "Tret",
            "pump_on"
        ],
        "r": [
            "Ta",
            "phi_s",
            "int_con",
            "int_lat",
            "int_rad"
        ],
        "z": [
            "Tsup_model",
            "Tret_model"
        ],
        "y": [
            ["y1", "Prad"],
            ["y2", "rad_flo"],
            ["y3", "Tsup"],
            ["y4", "Tret"]
            
        ]
    },
    "objective": "dot(v1, v1)@R[0,0] + dot(v2, v2)@R[1,1] + dot(v3, v3)@R[2,2] + dot(v4, v4)@R[3,3]",
    "method": "multiple_shooting",
    "integrator": 
        {
        "name": "RK4",
        "method": "radau",
        "degree": 3,
        "n_steps": 1
        }
    ,
    "solver": "",
    "opt": {
        "verbose": false,
        "ipopt.linear_solver": "ma57",
        "ipopt.ma57_pre_alloc": 10,
        "ipopt.ma57_automatic_scaling" : "yes"
    },
    "codegen": true,
    "with_jit": false
}
